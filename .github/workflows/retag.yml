name: Retag images
on: workflow_dispatch

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
   
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b #v5
        with:
          go-version: '^1.23.7'
      - name: Build Retag Command
        run: |
          sudo GOBIN=/usr/local/bin go install
      - name: Generate Retag Matrix
        id: generate-matrix
        run: |
          matrix=$(kubecon-2025-ssd retag generate -c retag.yml)
          echo "matrix=${matrix}" >> "$GITHUB_OUTPUT"
  retag:
    name: "Retag ${{ matrix.retags.Name }}"
    environment: testing
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: oras-project/setup-oras@5c0b487ce3fe0ce3ab0d034e63669e426e294e4d
      - name: Login to Registry
        id: docker-login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Print the retag option # now below here we should retag the images, sign them, and perhaps scan them?
        run: | 
          echo "Matrix: ${{ toJSON(matrix) }}"
          echo "Source: ${{ matrix.retags.Source}}"
          echo "Destination: ${{ matrix.retags.Destination}}"
          echo "Tags: ${{ matrix.retags.Tags }}"
      - name: Copy Tags to Registry
        run: |
          tagList=${{ matrix.retags.Tags }}
          IFS=',' # Set the internal field separator to comma
          read -ra tags <<< "$tagList" # Read the string into an array
          for tag in "${tags[@]}"; do
            echo "Tag: $tag"
          done

      
